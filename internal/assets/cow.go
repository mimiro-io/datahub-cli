// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// resources/addJobsConfig.json
// resources/cow.txt
// resources/doc-content.md
// resources/doc-dataset.md
// resources/doc-jobs.md
// resources/doc-login.md
// resources/doc-namespace.md
// resources/doc-query.md
// resources/doc-root.md
// resources/doc-transform.md
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesAddjobsconfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xbf\x4e\xc4\x30\x0c\xc6\xf7\x3e\x85\xe5\xf9\xa4\x22\xdd\x89\x21\x13\x03\x03\x13\x42\x02\x26\xc4\x90\x4b\xdd\x3f\x47\x9a\x54\xb1\x8b\x54\x55\x7d\x77\xd4\x34\x2d\x05\x09\xa6\xcb\x64\xd9\x3f\xfb\xfb\x62\x8f\x19\x00\x00\x36\x05\x2a\x40\x21\x96\x8b\x3f\x3f\x05\x5f\xf4\x46\xf0\xb0\xd4\x24\x34\x55\x45\x81\x51\xc1\x5b\xcc\xcc\x6f\xdc\xa2\x3d\xf3\x32\x74\x34\x0f\x32\xc1\xbb\xd4\xbe\x21\x17\x7f\x5e\xcb\x65\x6f\x2d\x0f\xce\xfc\x46\xd8\xd4\x54\xf4\x36\x32\x77\xae\xa9\x6a\xb1\x03\x6e\xc8\x74\xb8\x8e\x7a\xe3\x4c\xa0\x96\x9c\x68\xfb\xaf\x01\xfa\xa4\x30\xc0\xed\x0d\xef\x2c\xc4\xe8\x3d\x2d\xa6\xd3\x3d\xd3\xbc\xb8\x52\x5b\xa6\x94\x64\xdf\x07\x43\x08\x6a\x67\x12\xa3\x34\x28\xc0\x07\x91\xee\x5e\x8b\x66\x92\xe7\x05\xfc\x76\x80\xaf\xc1\x46\xa8\x16\xe9\x54\x9e\x5b\x6f\xb4\xad\x3d\x8b\x3a\x1d\x4f\xc7\xbc\x58\xda\x38\x4f\xe7\xc9\x4d\xad\x5d\x45\xc9\xdd\xb4\xca\x37\xee\xe3\x2f\xf1\x55\x78\x46\x76\xb2\x8f\xba\x8d\x1f\x5e\xcf\xfe\x63\x9e\x04\xed\xb8\xf4\xa1\x45\x05\xe3\x94\x4d\xd9\x57\x00\x00\x00\xff\xff\xdb\x85\x63\xd8\x31\x02\x00\x00")

func resourcesAddjobsconfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_resourcesAddjobsconfigJson,
		"resources/addJobsConfig.json",
	)
}

func resourcesAddjobsconfigJson() (*asset, error) {
	bytes, err := resourcesAddjobsconfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/addJobsConfig.json", size: 561, mode: os.FileMode(420), modTime: time.Unix(1616613407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesCowTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\xcf\x7b\x91\x1d\xec\xd5\xb5\xcc\x10\x50\xd9\x85\xb6\xd0\xa5\x50\x7a\x14\x2b\xa5\xad\xdb\x1a\xd2\x18\x9c\x6c\x7b\x30\xce\x6f\x2f\x63\x29\x89\xdd\xdd\x06\xd3\xc1\x98\xe8\xcd\xf7\x94\x91\x66\x8c\x65\x61\x58\xde\xec\xd4\x02\xd6\x7b\xc0\x39\xef\xbd\x37\x66\x01\x6f\x7a\xef\xbc\x01\x10\xf4\x68\x5a\x60\x11\x0e\x40\xde\xf7\xb8\x7d\xbd\xdb\x37\x77\xed\xb6\xed\x6e\x3f\xd6\x5f\x31\x0c\xed\x5c\xbc\xaf\xbf\x6d\x9e\xb6\x07\x0c\x43\xf1\x1f\x86\x41\x9d\xcf\x74\x25\xcc\xa5\x32\xaa\x2a\x0d\x88\xab\xac\x4a\x1d\x6c\x8a\x94\x9d\x2d\xe4\x18\xf2\x0e\xde\xcb\xb5\x32\xe5\x27\x60\xc2\x4c\xf1\xd3\xc9\xf3\x56\xb7\x85\x02\x88\x50\x44\xcb\x25\x3f\x77\x97\xda\xda\x1c\x08\xeb\xf5\x7a\xad\x93\x16\x8d\x14\x49\x9a\x3b\xcf\x0b\x29\x9c\x22\xe9\x30\x47\x53\x81\x85\xfc\xce\x01\x6d\xad\xd5\x52\x3e\xc3\xb8\xd4\xd0\x50\x4e\x40\x6b\x45\xa6\x68\x1a\xb7\x34\xc0\xe8\xee\x7d\xf5\x57\x10\x40\xc7\x50\x1e\x8f\xac\xc0\xac\x03\x43\xfe\xb5\x78\x3e\x00\x04\x18\x04\x06\x2b\x66\x16\x4a\x38\x7e\x91\x63\x79\x68\x2e\xab\xa0\x83\x86\x11\x99\x9e\x9b\x92\x4c\xa0\xb1\xfb\x85\x97\x5b\x4f\x9b\xdf\xf0\xcd\x84\xf3\xb2\xbb\xf3\xee\x74\x6b\xa5\x2e\xb5\x8a\x19\x11\x47\x7d\x25\xf2\xea\xd2\xc0\xf1\xa1\x98\x5c\x01\xaf\x02\x4b\x76\x75\x9e\xfa\xf0\xa8\x13\x48\x93\xb9\x8a\x72\xa8\x1e\x65\xbc\xe0\x7e\x8d\xb5\x3b\x03\xa5\xe6\xd3\xfb\xa6\xab\xeb\x1d\x86\x41\x3a\xf7\xd0\xfc\x6c\xba\x16\xf7\x9b\xc3\x06\x6f\x9f\x3e\xe3\xee\xfd\x3b\x10\xfd\x6b\xda\xf1\xf0\x41\x22\xcb\xf0\xd2\x47\xf2\xe9\x47\x8d\x2f\xed\xef\x3d\x36\x5d\x8d\x6d\xb3\x3f\xd4\xbb\x66\xf7\x3d\xbb\xbe\x59\x96\xa9\x3f\x01\x00\x00\xff\xff\x4e\x9a\x34\xbc\x5f\x04\x00\x00")

func resourcesCowTxtBytes() ([]byte, error) {
	return bindataRead(
		_resourcesCowTxt,
		"resources/cow.txt",
	)
}

func resourcesCowTxt() (*asset, error) {
	bytes, err := resourcesCowTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/cow.txt", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocContentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xdc\x38\x12\xbd\xf3\x57\x3c\x38\x97\x24\xe8\xd6\x0f\x08\x36\x0b\x64\x1d\x64\x61\x20\xc1\x1e\x92\x3d\x0c\x06\xc1\x98\x2d\x96\x5a\x35\xa6\x48\x0d\x8b\x72\xbb\x81\xf9\xf1\x83\x22\xa5\xfe\x70\xdb\x09\x32\xc8\xe8\x22\x89\x2c\x16\xab\x5e\xbd\x7a\xe4\x0b\x7c\xe2\x81\x53\xc4\x7b\x9b\x6d\x3f\x6d\x70\xfd\xf1\x06\x6b\xb4\x31\x64\x0a\xd9\x98\x17\x2f\xf0\x7f\xb1\x5b\x32\xe6\xf6\xf6\x76\x63\xa5\x37\xe5\xf7\x8d\xc1\xc0\x03\x7e\xed\xbc\xdd\xca\xd7\xf9\xa7\x8d\xc3\x60\x83\xfb\x6a\xcc\xbb\x7b\xcb\xde\x6e\x3c\xe1\xba\x8e\xc9\xbc\x60\xf6\x0b\xcf\x92\xcf\x47\xac\x73\xe7\x03\xd2\xc7\xdd\xf9\x88\x23\x4f\x99\x8c\xf9\xa0\x9b\xbe\x31\xd0\x67\xbd\x76\x2c\xba\xd3\x7a\x63\x43\xa0\x04\xe0\x33\x65\xe4\x88\x9c\x26\xd2\xf7\x3c\x8f\xdc\x13\xaa\x8d\xc1\xba\x5f\x61\xbd\xee\xc9\x8f\x38\x7d\x3e\xf7\x71\x27\xc8\x3d\x0b\xca\xdc\x40\x52\x72\xbf\xbd\xbd\x2d\x48\xbc\xdb\xc4\x29\x1b\x73\x3d\xc7\x43\x21\x27\x26\x41\x6b\x03\x36\x04\x1b\xf6\xb8\xe3\xe0\x10\xbb\x63\x56\x02\x1f\xc3\x56\xdf\x9c\xd1\x5b\x81\x0d\xb8\x79\xdf\x98\xff\x05\x42\xde\x8f\xdc\x5a\x8f\x49\x08\xad\x15\x02\x8b\x06\x2c\x39\x26\x82\x50\xba\xe7\x96\xd4\x53\xc7\xdb\x29\xd9\xcc\x31\x34\xc7\xcd\xe7\x4d\x27\x21\xa7\xde\x2d\x5a\x0d\xc7\x7a\xf8\xd8\x16\xdb\xa3\xab\x33\x17\x82\x2e\x26\x43\x0f\x99\x52\xb0\x1e\x03\xb7\x29\xce\x7b\x09\x74\x38\x38\x0e\xdb\x82\x56\x47\x36\x4f\x89\x44\x13\xd2\x7f\x57\x29\xd2\x98\x2f\xfd\x85\x53\x9b\x08\x63\x8a\xf7\xec\xc8\x15\xf4\x7b\x42\xa2\x21\x66\x12\x6c\xf6\xfa\x3b\x98\x36\x86\x40\x6d\x2e\xee\xe3\xa9\xc7\x15\x6c\xd0\x2c\xee\x74\xaa\x8b\xe9\x00\x5f\xec\x60\x21\x23\xb5\xdc\x71\x0b\x76\x8d\x31\xff\xa1\xd6\x2a\x60\x4b\x4c\xfb\x60\x07\x6e\x11\x4a\xa8\x3a\xfa\x24\x70\xb2\x52\xfc\xb5\xae\x36\x69\x7c\xc6\xb1\x8c\xde\xd6\xc0\xc0\x41\xf1\x8b\xc3\x10\x83\x6e\x3f\xd8\xbc\x82\x44\xfc\x2e\x31\xe8\x9a\xb6\x8f\x42\x01\xbb\x9e\x12\xc1\x8e\xa3\xe7\x56\x19\xd5\x14\x4e\x2c\x04\x37\x05\x95\x2e\x7a\x1f\x77\x9a\xc6\xdc\x0c\x15\x19\xbb\xf4\xc3\x1b\x63\xf0\xba\xb0\xbf\xb2\xb7\x7c\x0a\xac\xf7\x4b\xce\xa2\x06\xd6\x39\xcc\x06\xd6\x39\x41\x4c\x98\x46\x67\x15\x4c\x7b\xe8\x4d\xbc\x2e\x3d\x32\xdb\xcd\x09\x09\x1c\x65\xcb\x9e\x5c\x0d\x5f\xd1\xcc\xb5\x5c\xcb\xa2\xda\x46\x75\x51\xf9\x54\xa7\xc2\x61\xeb\xe9\xac\xef\xcf\x7a\xd5\x40\xd3\x2b\x81\xcf\x99\x5d\x86\x7e\x68\x08\x25\x5f\x5f\x29\x4c\xa9\x31\x58\x6a\xa6\x83\x85\x58\x9e\x1e\x58\x7b\xf2\x58\xb5\x7c\x41\xa9\x15\x62\xf0\xa5\x40\x06\xec\xd0\x46\x3f\x0d\xa5\x1c\x9a\xb4\x76\x02\x1e\x2b\xd2\x85\xc2\x1c\xf4\xe9\x28\x19\x67\x9d\x5f\x5e\x8a\x50\x4d\xf1\xbf\x3e\x6e\xac\xc7\xa9\xbc\xfc\x3d\x7d\x29\x82\x71\x82\xa0\x6a\x9b\xc1\x3b\xad\xe4\xb1\x7c\xc7\xf8\xe7\x89\x40\xbb\x23\xf1\x4f\x0a\x1e\x40\x0f\x2c\xda\x36\x0d\x3e\xc4\x04\x7a\xb0\xc3\xa8\x54\x7a\x24\x9f\xe8\xd8\xd3\xdb\x61\xaf\xaf\x46\x8b\x6f\x4c\x4c\xc6\xb4\x36\xe3\x64\x10\x7f\x5e\xc8\xee\xd3\x00\xaa\xc7\x27\xf0\xeb\x14\x3f\xf5\x06\xc9\x49\x89\x8e\xc2\x0c\x0e\xe3\x94\x4b\x04\x0d\x3e\x4d\x92\x55\x9b\x74\xbb\xe6\x31\xe6\xf3\x73\x80\xbe\xe8\x3e\xd6\xac\x26\xec\x8e\x4e\x67\xb7\xee\x84\x1c\x25\xac\x1c\x75\x49\x83\x2f\xaa\xd2\xf1\x9e\x52\x62\x47\x52\x69\xa5\x51\x15\x91\xf8\xb9\x95\xac\xdc\x5f\x68\xcf\x82\x6a\x15\x41\x9c\x7b\x4a\x48\x64\x1d\xba\x14\x07\xd8\x1a\xc3\xcb\x8a\xd0\x2b\x2d\x63\x19\x97\xec\x38\x34\xb8\xe9\x16\x0b\xc5\xd5\xa8\xab\x31\x91\x50\xc8\x2b\xdd\x54\xbb\xc6\x66\xec\xd8\x7b\x85\x6f\x4c\xd4\x51\x4a\xe4\xc0\x41\xb2\xee\x31\x43\x51\xbd\x19\x83\x5f\xe2\x54\xce\x81\x05\x86\x32\xcb\x73\x2c\x07\x44\xce\x82\x50\x31\x16\xca\x45\x84\x15\xf0\xb7\xff\x92\x38\xd0\x6f\xec\xfe\xdd\xe0\xc6\x09\x86\x49\x0f\x66\x3d\x58\x02\xff\x31\x51\x55\x66\xe9\xe3\xe4\x5d\x19\x4d\x7e\xdd\x25\xa6\xe0\xfc\x1e\x2f\x99\x70\x35\xec\xd7\xde\xee\x29\xad\x6b\xf7\x5e\x9d\x06\x7b\xf5\x69\x8f\x8f\x3a\x89\xeb\x3a\xf9\x4a\xa3\xbe\xe9\xb0\x8f\xd3\x72\x5a\x9c\xf2\x1b\xec\x0a\x10\x88\xde\x9d\xab\xc1\x01\x14\x4d\x75\x97\x38\x67\x52\x04\x4e\x9b\xac\xdc\x17\xcc\xe1\x0c\xa7\x59\x08\xa5\xb2\xec\x42\xe0\x0e\xdd\xa7\x0b\x2e\xe6\xbf\xd1\x69\x45\x73\x0b\x74\x9a\x3b\xbb\xab\xda\x66\x17\x26\x65\xf2\x99\xde\x2a\x06\xdf\x11\xa7\xf3\x36\xa9\xb7\xa1\x27\xfa\xe4\xd9\x2e\xf1\x31\xde\x95\xb3\xfe\xa7\x77\xc3\xa3\x23\xf8\x79\x35\x2f\xe7\xd9\x4a\x89\x9c\x33\x77\xbc\x9c\x49\x85\xf6\x1c\xf2\xf1\xa6\xd0\xc6\x20\x51\x4f\x54\x25\xc7\x69\x1e\x3c\x2b\xe6\x91\x09\x95\x91\xfb\x38\xa5\x47\x0c\xd1\x25\x96\x83\x40\xa8\x4d\xa4\xfb\x76\xc7\x12\x62\xb4\x22\xbb\x98\x9c\xac\xcc\xd2\x6a\x24\x54\x69\x15\x62\x91\xab\xc1\xca\x1d\xb9\xe6\x8c\x54\xcb\x95\xf3\xfd\x33\x07\xa5\xb6\x13\x67\xa9\xaa\xb3\x30\xea\x68\xfc\x7d\x36\xcd\x87\xf1\xb7\xf9\x34\x1b\x7d\x8b\x51\xb3\xc9\x0f\x71\x6a\x4e\xee\x87\x58\x55\xd7\xfc\x33\x12\x9b\xca\x0d\xb8\x9d\x52\xa2\x90\xfd\x1e\x21\xaa\x48\x64\xbd\x32\xc6\x00\xbb\xd5\xea\xe6\xa2\x1d\x25\x8a\xe5\x9a\xba\x4b\xb1\xdc\xb7\x4a\x8c\xe5\xe2\x36\x7a\xb2\x42\x45\xc6\x5a\x9b\xa8\x9b\xbc\x5e\xde\xc2\x61\x59\x63\xfe\x0a\x00\x00\xff\xff\x89\x5b\xc8\x46\xf7\x0c\x00\x00")

func resourcesDocContentMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocContentMd,
		"resources/doc-content.md",
	)
}

func resourcesDocContentMd() (*asset, error) {
	bytes, err := resourcesDocContentMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-content.md", size: 3319, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocDatasetMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4d\x6b\x1b\x41\x0c\xbd\xcf\xaf\x10\xf4\x9a\xf5\xad\x17\x43\x0e\x25\xfd\x84\xe4\x94\xa6\x97\x52\xb0\x76\x47\xbb\x2b\x3a\xa3\x31\x23\x6d\xd2\x42\x7e\x7c\xd1\x7e\xd8\xd4\xc4\xbe\xcc\x30\xef\x3d\x3d\x3d\xc9\xfb\x0e\x1e\x38\x73\x2d\xf0\x11\x0d\xc7\xa9\x85\xbb\xfb\x6f\xd0\x40\x44\x43\x25\xd3\x10\x0e\x87\x43\x8b\x3a\x86\x07\x14\x1c\x68\x06\x9c\xb6\x11\xa0\xaf\x25\x43\x97\x18\x74\xea\x46\x40\x85\xae\x12\x1a\xdd\x40\xa4\x44\xcb\xa9\x5d\xe5\x96\x00\x25\x82\x16\x28\xb2\x83\x47\x22\xc0\x67\xe4\x84\x6d\x22\xb8\x2b\x39\xa3\x44\xdd\x85\x4f\x7f\x30\x1f\x13\xe9\x3e\x00\x64\xce\x9b\x0b\x74\x23\xca\x40\x0a\x4d\x23\x98\xe9\xb6\x2b\x2f\xbb\x0f\xc2\x19\x13\x34\x4d\xe2\xcc\x76\xfb\x3e\x84\x52\xf7\xe1\x42\x37\xb8\xf6\x44\x0e\xe1\x49\x71\xa0\xcb\xe2\x89\xd5\xe0\x67\x9f\x70\xd0\x5f\x97\xbe\x73\x96\x2b\xe0\x12\xf0\x0a\xe8\xce\x6f\x23\x24\xc6\xc6\xa4\xd7\x2c\xd7\xa8\x6f\xa3\x6a\xa5\x9e\x2d\xc3\x67\x3f\x3d\x4f\x23\x37\xeb\x70\x60\xfd\x7d\x1f\xe9\xa4\xb2\xb2\x84\x3c\x59\xfb\xd2\x5c\xd5\xbb\xaa\x2f\x35\xa3\x9d\x55\x65\xb2\xe3\x64\xb0\x3c\xef\xe0\x07\x26\x8e\x50\x8e\xc6\x45\x14\xb0\xd2\x1e\x8c\x6a\x7e\x3d\x56\x32\xfb\xfb\x5a\xf1\xc5\x2b\xa9\x57\x52\x96\x6e\x6b\xe0\x91\x24\x02\xc2\xf2\x64\xe5\x37\x89\xb7\x61\x23\x81\x52\x7d\xa6\x1a\x16\xda\xba\xbf\x55\x74\xef\x77\x9d\x59\x32\xe5\x96\x2a\x94\xfe\xdc\xf5\x1a\xc3\xed\x46\xb7\x1b\x29\x1d\xb7\xb8\x5f\xfd\xde\x97\xba\x65\x3e\xa7\xe3\x44\xdb\x5c\x9e\x94\xa2\x57\x61\x89\xdc\xf9\x62\xdd\xc8\x09\xd0\x15\x31\x64\x61\x19\xfe\xb7\x2b\x18\x43\xf8\x92\x4a\x8b\x09\x4e\xc3\x5e\xfa\x8e\xac\xfe\xef\x6d\x5a\x14\xa1\x3a\x27\x9e\x27\x6d\x75\xf2\xc0\xb0\xe2\xb3\xc7\xc2\x99\x3f\xa6\xf0\x2f\x00\x00\xff\xff\x15\xa8\xc5\x0f\x72\x03\x00\x00")

func resourcesDocDatasetMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocDatasetMd,
		"resources/doc-dataset.md",
	)
}

func resourcesDocDatasetMd() (*asset, error) {
	bytes, err := resourcesDocDatasetMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-dataset.md", size: 882, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocJobsMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x6d\x6f\x1b\xb9\x11\xfe\xce\x5f\x31\x50\x50\x34\x69\xb5\xb2\x9d\xa4\x57\x54\x88\x8d\xba\xc9\x05\xf1\x21\x39\x04\xb5\xaf\xc5\xe1\x70\x80\xb8\xcb\x91\x96\x36\x97\xdc\x92\x5c\x2b\xc2\x29\xff\xbd\x98\x21\xb9\x5a\xd9\x4e\x5f\xf2\x21\x5e\x92\xc3\xe1\x70\x5e\x9e\x79\xa8\x67\xf0\x49\x77\xda\x3b\x78\x27\xa3\x6c\x87\x1a\xde\x7e\xbc\x82\x0a\x6e\x5d\x1d\x84\xf8\x24\xad\xdc\x20\xa8\xbc\x44\x93\xb0\xf6\xae\x83\xc6\x68\x08\x43\xd3\x82\x0c\x20\x95\x9a\x83\x42\x83\x11\xe9\x6f\x68\xbc\xae\x11\xa4\x55\x10\x1c\x38\xbb\x10\xab\xd5\x4a\xfc\x2e\xf0\x1f\xf1\xec\x19\x7c\x70\x5b\x88\x0e\x86\x80\x42\x7c\x72\x21\xce\x41\xaf\xc1\xba\x08\xd2\x18\x68\x5c\xd7\x49\xab\x02\x34\xd2\x42\x8d\xd0\x48\x63\x50\xc1\x56\xc7\x16\x62\x8b\x64\x02\x68\xc5\xc7\x42\x2f\xbd\xec\x30\xa2\x5f\x08\xf1\xde\x79\xc0\x2f\xb2\xeb\x0d\xce\x41\xdb\x10\x51\x2a\x70\x6b\x50\x4e\xdb\x0d\xac\x3a\xdd\x25\xeb\x5d\x8f\x5e\x46\x84\xca\x81\x1f\x2c\x54\x95\x56\xe7\x6f\x82\xeb\xb0\xba\x75\x75\xa5\xd5\xc5\x6a\x2e\x76\x6e\xe0\xe3\x8b\x9a\xad\xd7\x11\xbf\xad\xe3\x78\x3b\x5f\xf1\x07\xf6\xde\xe5\xe8\xd3\x80\xfe\x1e\x3d\x4d\x83\x0e\x7c\x8f\x4e\x6a\x0b\x1d\x36\xad\xb4\x3a\x74\xe4\x8f\xce\xdd\x27\xaf\x45\x2f\x6d\x58\x3b\xdf\xb1\xdf\x17\x70\xd3\xea\x00\xa1\xc7\x46\xaf\x35\x06\xd8\xb6\xe8\x91\x74\x08\x5a\x0e\x18\xc9\x67\x98\xe3\xf2\x1c\xbf\x44\xf4\x56\x1a\x70\x1e\xb4\x4d\xdf\x2f\xe6\x79\x93\x8e\xb0\x71\x18\xe0\xb9\xdc\xd0\xf1\xdf\x90\x25\x1b\x34\x45\x23\x38\x21\xfb\xde\xd0\xa1\xd2\xee\x0e\x76\xc9\xa8\x9d\x25\x93\xe9\x22\xd9\x88\x85\x10\x97\x76\x57\x6e\x58\xb4\x99\x1d\x74\x52\x21\x0c\x7d\x32\xef\x15\xf4\x1a\x1b\x24\x01\xd8\xb6\x32\x92\xec\x9d\x75\x5b\x9b\x02\xfa\x59\xf7\x68\xb4\xc5\x85\xb8\x69\xb1\x88\x4a\x8f\x4b\xb8\x76\x83\x6f\x10\xaa\x0b\xb8\x19\xbd\x53\x5d\xc0\xb5\xb6\x77\xc9\xe0\x89\x29\x6c\x39\xbb\x93\xcf\x89\xe4\x3e\xa5\x3d\x36\x64\xf6\x42\x88\xac\x8b\x76\xd1\x7e\x3a\x00\xa4\xd9\xca\x5d\x00\x8f\xff\x1a\xb4\x47\x35\x87\x7a\x88\x20\x27\x87\xe9\x00\xce\x9a\x1d\x25\x3b\xa5\x63\x8b\x16\x2c\xa2\x22\x51\xce\xf4\xd6\x0d\x46\x95\x93\x43\x34\x3b\xe1\x9a\x66\xf0\xe0\x2c\xac\x9c\xa5\x30\x6f\x70\xc5\xe9\xb3\xa0\x0c\xe1\x14\x81\xe8\xf5\x66\x83\x9e\x53\x85\xc6\x94\x74\xad\xbc\x47\x70\x16\x29\x28\x9d\xa3\x48\x27\x21\x68\x9c\x5d\xeb\xcd\xe0\xd9\xfb\x61\x01\x97\xe3\x0a\x2d\x05\x1d\x62\xa0\x84\x97\xb0\xca\xf3\x37\xbb\x1e\x57\x6c\x9d\x84\xd5\xad\xab\x79\x9c\xcc\x55\xd8\xa3\x55\xda\x6e\x04\xd9\x77\x24\x8f\x3a\xb6\xe8\x61\x15\x9a\x16\xd5\x60\x70\x45\x86\xac\x3a\x67\x75\x74\x1e\xd5\xbb\xe4\xe3\x15\x05\x0c\xbf\x44\x2f\xa1\xf7\x54\x0f\x71\xb7\x10\x14\x35\xf2\xa5\x47\x78\x09\x4a\xaf\xd7\xe8\xd1\x46\x2e\xd9\xb8\xeb\x31\x2c\x05\xfc\x01\x56\xeb\xc1\x98\xb0\xb3\xcd\x8a\x47\xda\x36\x1e\x3b\xb4\x51\x9a\x15\xb9\xe1\xb0\x9c\x4a\x3d\xe5\x92\x25\xa7\x47\x07\x6b\x8c\x84\x39\xc6\x00\xda\xa8\xa3\x4e\x11\x96\xe0\xb1\x73\x71\x4c\x80\x74\x47\x0e\x17\x07\x4a\x47\x50\x0e\x83\xfd\x7d\x84\x30\xf4\xbd\xf3\x11\x52\x40\x28\xaf\xd5\x89\xf3\x22\xa1\x17\x85\xe6\xc8\x20\x3a\x5e\xc2\xbd\xf4\x3a\xa5\x3c\x65\x7d\x8b\xf0\x7e\x30\xe6\x7a\x67\x9b\x94\x25\x0f\x4c\x24\x44\x70\x64\x13\x07\x6f\x4d\x19\x45\x4e\x28\xee\x1c\x6f\x21\xb2\x09\x8c\x7e\xd3\xec\x0d\x29\x3d\xb3\xa5\x01\x74\x1c\x3d\xab\x03\x79\x3b\xa6\x4c\x4e\xb9\x8d\x9c\x38\xd7\x59\xbb\x27\xf5\xbd\xc7\xfb\xec\xf7\x8c\x0a\x7e\xb0\x96\x60\x50\x5b\xc6\x4c\x63\xd0\xcc\x09\x9c\x25\x5f\x05\xe8\x2e\xb0\xd5\xc6\x40\x8d\xc2\x63\x31\x55\x91\x65\x0c\x83\xa3\x47\xc8\x82\xac\x2c\x97\x88\x85\xab\xc9\x72\x56\x02\xe1\x4e\xf7\x7d\x56\x90\xce\x38\x6c\x5c\x08\x31\xdd\xc2\x56\xe6\xf2\x59\x6b\xab\x43\x0b\x35\xae\x5d\x82\x38\xb0\xf8\x85\x3d\x3c\xda\xc4\x76\x77\xf2\x8e\x1c\xe4\x11\x76\x6e\xf0\x07\xdf\xea\x00\x8d\xf3\x54\xe9\x0b\xf1\xad\x6c\x2c\x45\x33\xc9\xc8\xc6\x3b\x9b\xb2\x71\xac\x54\x4e\x45\x9e\x1f\x37\xb4\x32\x90\x77\xb9\x3e\xe5\xb4\x3e\x28\x68\xd1\x71\xa2\x18\xad\xe0\x97\xb7\xde\xd9\x5f\x9f\xb7\x31\xf6\x61\x79\x72\xb2\x71\xca\x35\x0b\xe7\x37\x27\x1b\x1d\xdb\xa1\x5e\x34\xae\x3b\xf1\xae\x5e\xeb\xcd\x09\x1d\xf0\x82\xb6\x0d\xc8\xf8\x39\x85\x0a\x0a\xeb\x73\x70\xf6\x2d\x8f\xe1\x1c\x64\xc9\x90\x17\x29\x2d\xb9\x23\x48\x03\x29\xd8\x91\xd0\xb4\xe0\x09\x25\x60\xc9\xf0\x0c\xd3\xa5\x7f\xa8\xa2\x45\x4c\x9a\xa4\x1c\x5d\x48\xdd\xe6\x09\xe1\xd4\x9f\x18\x02\x38\x1a\x18\x0f\x1d\xf9\x09\x6c\x28\x90\x40\xba\x49\x24\xdb\xb5\x10\x3f\xbb\x81\xfa\x7e\xc2\x64\xc6\x85\x54\x30\xf2\x61\x73\xa1\x0a\xa2\x06\xa5\x43\xa4\xc4\x3d\x34\x99\x67\xcf\xe0\xa3\x0e\x51\x30\x9b\x18\x3b\xb2\xa1\x29\xe6\x17\xdc\x2c\x33\x89\x28\xbd\x36\x68\xa2\x05\x21\x96\xf9\xb1\xc5\xe9\x40\xd6\x70\xd9\x86\xd6\x6d\x41\xb2\x22\xf6\x88\x31\xa5\x69\x67\xcc\xde\xc3\x95\x02\x80\x7d\x69\x45\xf4\x79\x68\x0f\xbc\x40\xcd\x84\x3e\x3e\x4b\xd6\x9a\x24\x72\x44\x68\x00\x1f\x65\x88\xf0\xf7\xc1\xf2\x88\x07\xef\x32\x9e\xf3\xcc\xf7\xde\x3b\x4f\x5f\x62\x0f\x55\x55\x01\xff\x3f\xfd\x38\x7c\x3f\xb9\xf6\x50\xe8\x89\xf5\x32\xe4\x33\x22\x86\x58\xe9\x8e\x01\x71\x0f\x39\x7a\xf9\x7a\x7b\xb6\xa8\xcc\xd1\xcd\xf6\xb0\x96\x26\xd0\xca\x05\xfc\x15\xef\xd1\xef\xe0\xac\x83\x3d\xbc\x3c\x7d\x79\x5a\x9d\x9d\x55\x67\x7f\xb9\x39\x7b\xbd\xfc\xd3\x77\xcb\xb3\x3f\xff\xf1\xf4\x6c\x79\x7a\x0a\x7b\x78\x75\xda\x05\xd8\xc3\x5e\x50\x75\x5d\x29\xa8\x12\x99\xc9\x71\x49\x5c\x8e\x96\x4a\x7b\x2f\x07\x66\x10\xa4\xa5\x49\xbf\x1f\x57\x0f\x0c\x89\x11\x6a\xc7\x2a\xc8\xc6\x89\x02\x6d\xef\x68\x3a\xc7\xa2\x82\xab\xc3\x99\x7d\x9a\x73\x9e\x58\x67\x3a\x23\x47\xa9\x82\x0b\x38\x9f\x02\xde\x1c\x2e\x68\xa6\x34\xa5\x39\x34\x3b\x69\xcf\x4b\xb5\xcc\xc1\xe8\x4d\x1b\x6b\x33\xe0\x79\xa9\x5c\xd2\x37\xc6\xb9\x82\x7f\x52\x03\x2a\x07\x1b\x9a\xdf\x4a\x86\xc2\x51\x6e\x4c\x81\x8a\x99\xb1\x71\x94\xef\x3a\x31\x1a\xde\x40\x3b\xf3\x86\x94\x21\x15\x5c\xf1\xb5\x01\x69\x18\x80\x99\x06\xb3\x96\xd8\xe2\x8e\x11\x8f\xd2\xd9\x02\x01\x20\x97\xcc\xa5\x52\x42\x5c\x2a\x45\xb8\x61\x71\x3b\xa7\xbb\x0f\xbd\x92\x91\x5b\xe0\xa1\xce\x6e\x5d\xbd\x78\x50\x5a\x52\x29\xa8\xaa\xb5\x36\x78\xde\xcb\xd8\x9e\x44\x77\x42\x52\xb7\xc1\x59\x16\xbc\x54\x8a\x79\x0b\x53\x9f\x48\xc0\xac\x6d\x3f\xc4\xd4\x78\xae\xa3\xba\xb2\x0c\xd9\x85\x53\x2b\x97\x8a\x3f\xa3\xcf\x92\x75\x34\x32\xc2\x43\xe5\xb0\x87\xa9\x0d\xa9\xba\x13\x4d\x62\x24\x26\x25\x09\x2f\x96\xc9\xe2\xdf\x04\x00\xc0\x4c\xab\x19\x2c\x61\xc6\xa8\x58\x35\xae\xdf\x55\xf7\x18\x67\xf3\xb4\x58\x00\x72\xb6\x84\x5f\x78\x86\xfe\xfd\x36\x7e\x4d\x65\x88\x0d\xcd\x96\x30\x2b\x71\xcd\x2a\x46\xb1\x87\xa8\x47\xb2\xaa\x5e\x7c\x46\xd7\x1b\x9c\x8d\xb2\x5f\xf9\xeb\xd7\x7c\x7e\xca\xbc\xd9\x12\xa2\x1f\x30\xcf\xa5\x54\x27\xa3\x0f\x86\xcc\xf8\x74\xba\xc7\x51\x55\x4e\x6c\x98\xfd\x28\x3b\x7c\xe2\xcc\xaf\xe3\x4d\x73\x89\xcc\x1e\xeb\x5d\xc2\xec\x07\x79\x2f\xe9\xa1\xd6\xc7\xb1\xbe\x0e\x36\xcf\xde\x3a\xc5\x52\x6f\x6a\x19\xf0\xbb\xd7\x80\xb6\x71\x44\x6f\x6e\xc7\x5d\x17\xc7\xa7\x51\xb5\xfd\xb7\x1b\x90\xc8\x43\xfb\x69\x9d\x50\xe8\xf8\x0a\xe2\x6b\x8a\xa8\xf8\x91\x48\x1d\x77\xb6\xda\xc5\xb6\x30\x23\xe6\xdb\x85\xb8\x1f\x33\xf6\x38\xe5\xeb\xd6\xc5\x05\xfc\x9c\xf3\xae\x75\x5b\xc2\x2c\x4e\xe7\x09\xaf\x17\x9c\xa6\x99\x46\x05\x7a\xd6\xce\x41\x9a\xd8\xba\x61\xd3\xe6\x0e\xd1\xd1\x33\xb7\xc6\x18\x13\xbb\x2a\x09\x3c\x6e\x3c\x00\x54\x63\x74\x26\xf7\x29\x5c\x53\x0a\xf2\x9c\x4b\xd4\x46\xb3\x7b\x01\x2f\x0b\xb9\x43\x55\x90\xef\xc0\x46\x8e\x02\x4e\x13\x1f\x62\xec\x8f\x27\xc5\x27\xa2\x47\xdc\x13\x79\x82\xdf\x48\xd0\x1b\x69\x2d\xaa\x6c\xc1\x83\x1d\x05\x76\x19\xf8\xb6\x05\x93\xb2\x43\x75\x48\x34\x2f\xbf\x06\xc7\x9e\x4f\x8e\x97\xc6\xa3\x54\xbb\x04\x11\xa1\x70\xce\xfc\xae\x5d\x08\xf1\x7d\x7a\x73\xa7\x3a\x7e\x94\xcb\xff\x39\x8f\x9f\xca\xe1\xaf\x73\xd6\xf4\x37\x8a\x37\x6d\xe6\x68\x93\xdc\x51\xb4\x61\xad\xd1\xa8\xf2\x94\x7a\xc2\x43\xff\xc3\x7d\xc7\xd7\x6f\xb9\x2f\x33\x1a\xb4\xaa\x77\xda\xc6\x90\xae\x5f\xde\x0b\x93\x4b\xb3\xa3\x36\x09\xb3\x05\xd1\x71\xd7\x38\xf3\x7f\x78\xe2\x91\xb5\xc5\x1b\x3f\x79\xc3\x02\x85\x39\x1a\xd7\x48\xd3\xba\x10\x97\xaf\x5f\xbd\x7e\x75\x92\xcd\x0c\x27\xaa\x5e\xf4\xec\xad\x93\xcc\xf1\x8a\x82\x1b\x77\x87\xf6\xb3\x77\xf7\x5a\xa1\x27\xbf\x5e\x0e\xb1\x3d\x3d\x9e\x2d\x0e\x16\xa3\x73\x7f\xf2\xe6\x1b\xbe\xdd\xc3\x7b\xfa\x24\x22\xf0\x0f\xe2\xa8\xc7\xc4\x84\x47\xac\x65\xff\x38\x02\xbc\x48\x9a\xf7\x4c\x28\x8b\x8b\x8b\x77\xd3\xde\xa9\x61\xb0\x87\xc7\xd6\x32\xa1\x2f\x75\xc3\x31\xe0\x47\xdd\xa1\x7a\xfa\x71\x37\x1d\x17\x58\x0d\x9d\x37\xd0\x27\xbf\x0c\x6b\x19\x74\x03\xc6\x6d\xb4\x65\xa1\xcf\x32\x84\xad\xf3\x2a\x0b\xf6\x65\xb8\x76\xfe\x91\xf4\x04\x7f\x58\x37\x79\x6b\xdc\xdf\xb8\xae\xd6\x36\x75\xee\x04\x36\x13\x53\x47\x0b\xb9\xfb\xbe\xe3\xd7\xe5\x51\x5f\xcd\xbf\x97\xf1\xef\x4f\xf0\x46\xab\x8b\xf1\xd7\xb1\xeb\x28\xe3\x10\x1e\x34\xe1\x90\x26\x1f\x33\x5c\xc3\x55\x49\x9e\x39\x1c\x5e\x5e\x7b\xb4\x73\x9e\xb2\x3a\xfd\x38\x95\x90\x33\x4a\xcf\xbd\x3e\x6a\x2a\xaa\x00\x51\xd6\x06\xa1\x71\x66\xe8\x6c\xaa\x28\xf8\xa0\x43\x74\x7e\xf7\xc0\x88\x36\xcd\x66\x9b\xf3\xef\x5d\x4f\xd8\x44\xdc\x83\x90\xe2\xc0\xe6\x65\xed\x86\x78\x20\x34\xfc\x44\x4e\x2f\x83\x8d\xbe\x47\x4b\xea\xc5\xbf\x03\x00\x00\xff\xff\xb0\x2c\x08\x68\x88\x14\x00\x00")

func resourcesDocJobsMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocJobsMd,
		"resources/doc-jobs.md",
	)
}

func resourcesDocJobsMd() (*asset, error) {
	bytes, err := resourcesDocJobsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-jobs.md", size: 5256, mode: os.FileMode(420), modTime: time.Unix(1616613407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocLoginMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6b\x24\x37\x10\xbd\xeb\x57\x14\x6d\x42\x76\x61\xa6\x67\x73\x5b\x4c\xbc\x60\x62\x1f\x4c\x9c\x04\xd6\xde\x84\x40\x20\xae\x69\xd5\x74\x6b\xad\x56\x35\xfa\x18\x7b\xf2\xeb\x43\x49\xea\xf9\x8a\xf7\x96\xd3\x30\x52\xa9\xf4\xea\xbd\xaa\xa7\xbe\x80\x5f\xcc\x68\x3c\xc3\x0d\x46\x1c\xd2\x1a\x7e\xba\xbf\x83\x25\x58\xee\x8d\x53\xea\xe2\x02\xbe\x04\xec\x49\xa9\x7b\xee\xc1\x38\x88\x0c\x71\x20\xd0\x25\x78\x01\xec\xe1\x85\xfd\x33\xbc\x98\x38\x94\x43\x30\x79\xde\x18\x4b\x41\x3d\x3d\x3d\xa9\xef\xca\x8f\x24\xba\xe7\xbe\x37\x4e\xb2\xa8\xbc\x36\x9a\xb1\x9e\x48\x81\x60\xdc\x2d\x03\xf9\x2d\xf9\xbc\xc7\x1e\xbe\xa6\x10\xcf\xe2\x4e\x63\x24\xe7\xf5\x9a\x53\xcc\xe0\x8c\x03\x72\xb8\xb6\x14\x32\xc0\x14\xc8\x0b\xd8\x72\x30\x32\xe0\x8c\x19\x4a\x8a\x56\xa9\xc7\xbc\x0d\xf3\x7e\x59\x5f\xc0\x8e\x13\x6c\x8c\x0f\x11\x1c\x91\xce\x7b\x5a\x03\x9e\x56\xd7\xca\xf5\x17\x70\xad\xb5\x94\x54\x17\x95\xfa\x93\x13\x74\xe8\xa0\xf3\x84\x91\x00\xe7\x1d\x58\xef\xc0\x27\xe7\x24\x58\xe0\x35\x87\xa2\x50\xeb\x06\x3a\x1e\x47\x74\xba\x3d\x67\x46\x6e\x5e\xd6\xa2\xaf\x9a\x21\xc6\x29\x5c\xae\x56\xe3\xae\xad\xc5\xb4\x65\xab\x81\xe5\x32\xf2\x33\xb9\xab\xe6\xc7\x2d\x5a\x23\xa8\x9f\xc9\x7d\x6a\x0a\x51\x77\x9b\x5c\x94\x66\xf7\x7d\x14\x44\x5b\xa3\x09\xd0\x01\x5a\x83\x61\x91\x01\x95\x3c\xe0\x70\x24\x30\x41\xe8\xd3\x80\xe1\x28\x28\x70\xce\x11\x06\x4e\x56\xab\xcc\x48\xdd\xfb\xdf\x41\xc3\x72\x99\x13\x5f\x35\x25\xf0\x87\x5a\x46\x25\xd7\x71\x84\x6e\x40\xd7\x53\x46\x9e\x43\x81\x9d\xe0\xa1\x57\x13\xe2\x91\x20\x45\xcc\x59\x46\x4d\x96\x22\x81\x89\x45\xde\x56\xa9\x07\xe3\x3a\x51\x29\x5f\x0c\x83\x14\x0c\xd6\x8c\x26\x92\x86\x0c\xc9\xc4\xdd\x02\x5e\x08\x42\xea\x7b\x0a\x31\xa7\x93\x6e\x95\x6e\x89\x69\x2a\x6d\x8f\xd0\x59\x43\x2e\xde\x09\x27\x7a\xff\xf7\x81\x3a\x4f\x51\x19\x17\x22\xe1\xdb\xd2\x2a\x00\x98\xab\x05\xcb\x1d\x5a\xf8\xab\xae\x55\x41\xf6\xf4\xe1\x64\x5a\x7a\xc5\x71\xb2\xd4\x1a\x6e\xf6\x71\xfb\xab\x67\x12\xe7\x85\x4f\xe7\x31\x05\xcf\x59\x5c\x59\x3c\x8a\xc5\x14\x07\xf6\xe6\x9f\x93\xbb\x53\x1c\x8e\x2e\x5f\xb1\x2c\xac\x32\x69\xc7\x07\xb5\x21\xa1\xf3\x5b\x90\x8b\x88\x8f\x03\x9d\xd2\x75\x02\x6e\x4c\x21\xc2\x9a\x0a\xf9\xb0\x61\x5f\x24\x3e\x60\xaa\xc3\x0b\xb5\xa5\x79\x1c\x4d\xac\x31\xe5\xfa\xc5\xc9\x3f\x78\x31\xd6\xc2\x9a\x54\xee\x71\x69\x6e\x0c\x47\xfd\x2e\xc1\x26\x48\xc3\x4b\x53\xc9\x7a\x87\x81\xc0\x94\xe4\xe8\x69\x3f\xb4\xd8\xa3\x08\x99\x6d\x40\x64\x9a\xcf\x9f\x8c\x85\x34\x85\xb4\x17\x4e\x93\xe7\xc9\x1b\x8c\x64\x77\xd2\x66\x1d\x4f\x54\xdb\x4b\xd3\x06\x93\x8d\x52\x61\x22\xe0\x0d\x34\x38\x4d\x7f\x77\x9e\x34\xb9\x68\xd0\x86\x66\x91\x69\x89\x03\x46\x01\xd6\xb1\xf7\xd4\xc5\x3d\x00\x01\x39\x16\xc7\x16\x5a\xf6\x40\x06\x7e\xa1\x6d\xf1\xbc\x35\x89\x9f\x4c\x18\xcd\xda\x92\xda\x23\x4f\x71\xf8\x70\x3a\x10\x75\x8a\x84\x41\x86\xa6\x08\x71\x02\xa5\xcd\x7a\xf9\x6c\x09\xef\xba\xe4\x3d\xb9\x68\x77\xef\xc1\x31\x74\xd8\x0d\x42\x0c\x6f\xca\xf4\x14\x8b\xa8\xcc\xc9\x88\x5c\x97\xfb\xd6\x04\xa8\xb7\x46\xfc\x24\x97\x94\x09\x17\x8b\x34\xae\x4b\x5e\xa6\xc0\x44\xc3\x0e\x2d\x74\x1c\xa2\x98\x49\x36\xd6\xfb\xd3\x41\x0e\x07\x6b\xb5\xa6\xcc\xa1\x07\x4f\xbd\x09\x91\x3c\xe9\x7d\xd8\x7f\xa6\xcc\xee\xdf\x9f\x0b\xf8\x32\x69\xfc\x46\xd2\x24\x5b\x67\x7e\xdd\xa1\xb5\x59\x7a\xf1\x3a\x21\xb1\x4c\xfb\xa1\x93\xaa\xf9\x49\xea\x1b\xb1\x96\x93\x97\xe0\xa6\x98\xcd\x9b\x19\xab\x11\xb1\x3b\x18\xd8\x39\xee\x1a\xf2\xb6\x13\xb2\x7f\x3b\xba\x06\x1d\x2a\x9e\x9f\xdc\xfc\x48\xce\xb5\x7a\x1a\x79\x5b\xbc\xb3\x4a\x0a\xd8\x45\xb3\xa5\x9a\xec\x08\xe8\xfc\x4c\x71\x8a\x4d\xab\x1e\x45\xba\x3c\x50\xec\xec\x2e\x37\x7b\xc6\x9f\x0f\x97\xb3\xcf\xb4\xcb\xef\xa9\xe4\x66\xb7\x31\x7d\xee\xac\x06\xde\xad\x2d\xba\xe7\xf7\xe5\xd1\xdd\x24\x6b\x77\x33\x8c\xfa\xae\x96\xc6\xcc\xe3\x5f\x8b\x91\x1c\x87\xc7\xf6\x8f\x81\xdc\x7e\x28\x2d\xf7\x3d\x69\xa9\xaa\x1c\xcb\x0a\x06\x02\x7a\x9d\xd8\x8b\x77\x93\xdb\xc2\x16\xbd\x29\xdf\x03\x62\x23\x0f\xb7\x9f\x7f\xbf\xfd\x9c\x27\xeb\xf1\xb7\x9f\x6f\x7f\x55\xf2\x1e\x18\x99\x2c\xbb\x03\xec\x3a\x0a\xe1\xf0\x89\xd0\x2a\x75\x5b\x7c\xeb\xb2\xe8\x52\x12\xd7\x24\xe5\x49\xbb\x5c\xad\xb2\x13\x0c\x1c\xe2\xe5\xc7\x0f\x1f\x3f\x34\x73\x54\xce\x7f\xd5\xb4\x6d\xdb\xa8\xac\xd1\x57\x5e\x87\xda\x88\xff\x06\x00\x00\xff\xff\x92\xf9\x8c\xcf\x6e\x09\x00\x00")

func resourcesDocLoginMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocLoginMd,
		"resources/doc-login.md",
	)
}

func resourcesDocLoginMd() (*asset, error) {
	bytes, err := resourcesDocLoginMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-login.md", size: 2414, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocNamespaceMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcd\xcc\xcd\x2c\xca\x57\x70\x49\x2c\x49\xcc\x28\x4d\x52\x70\xf6\xf1\x54\xd0\x55\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\x2d\xe6\xe2\xf2\x4d\xcc\x4b\x4c\x4f\x55\x48\x81\x2a\xc8\x83\x4b\x29\xa4\x15\xe5\xe7\x2a\x24\xe7\x64\xea\x29\x70\x25\x24\x24\x70\xa9\x16\x83\x29\x40\x00\x00\x00\xff\xff\x54\x42\x1f\x75\x53\x00\x00\x00")

func resourcesDocNamespaceMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocNamespaceMd,
		"resources/doc-namespace.md",
	)
}

func resourcesDocNamespaceMd() (*asset, error) {
	bytes, err := resourcesDocNamespaceMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-namespace.md", size: 83, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocQueryMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xf0\xcd\xcc\xcd\x2c\xca\x57\x70\x49\x2c\x49\xcc\x28\x4d\x52\x70\xf6\xf1\x54\xd0\x55\x28\x2c\x4d\x2d\xaa\xe4\xe2\x0a\x04\x51\x0a\x69\xf9\x45\x0a\x29\x89\x25\x89\x0a\x69\x45\xf9\xb9\x0a\x25\x19\xa9\x0a\xc5\xa9\x45\x65\xa9\x45\x5c\x09\x09\x09\x5c\xaa\xc5\x20\x0a\x10\x00\x00\xff\xff\x16\xdb\x1e\xd7\x47\x00\x00\x00")

func resourcesDocQueryMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocQueryMd,
		"resources/doc-query.md",
	)
}

func resourcesDocQueryMd() (*asset, error) {
	bytes, err := resourcesDocQueryMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-query.md", size: 71, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocRootMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x61\x6b\xe3\x38\x10\xfd\x6c\xfd\x8a\x21\xa5\xd4\x3e\x1c\xb3\x4b\x8f\x83\xeb\x11\x6e\xd3\x24\xdd\x0d\xa4\xd9\xbd\x24\xfd\x50\x4a\x49\x15\x6b\x6c\xeb\x4e\x96\x1a\x49\xbe\x10\x8e\xfd\xef\xc7\xc8\x76\x37\xbd\x96\x33\x04\x8f\x35\x6f\xde\xbc\xd1\x53\x74\x06\xb7\xb2\x96\xd6\xc0\x94\x7b\x5e\x35\x3b\x98\x2c\xe6\x8c\x4d\x94\x84\xc2\x58\xf0\x15\xf6\x79\xd1\xe6\x33\xc6\xce\xce\xe0\xce\xf1\x12\x19\x7b\x7a\x7a\xda\x71\x57\xb1\xf0\x79\xc5\x00\x6a\x59\xc3\x43\xa1\x78\xe9\x1e\xfb\xaf\xdc\xd4\x35\xd7\xe2\x91\xb1\xf1\xdf\x5c\x2a\xbe\x53\x08\x93\x76\xcd\x51\x89\x32\xa5\xd4\xd0\x3e\x0b\x53\x82\xd4\xe0\x4d\x68\xdc\x75\x64\x10\x22\x87\x3e\x60\x6e\xb9\xe6\xe5\x4b\xb2\x4f\x39\x28\xac\xa9\x21\x57\x92\x01\xfc\x69\x76\xae\x63\xfc\x2f\x3c\xa4\x4e\xa0\x15\xaa\xe7\x1e\xfa\x85\x62\xbe\x33\x8d\x07\xae\x8f\xd0\x09\x67\xec\x86\xe6\x21\xa9\xf4\x0c\x87\x42\x3a\x1a\x62\xb8\xe3\x5a\xa3\x05\x80\x35\xfa\x20\xd9\x36\x48\xef\x2e\x1f\x46\xe8\x30\xf1\xa1\x3a\xc2\xc1\x34\x4a\xc0\xd1\x34\xbf\x27\x0c\x60\x58\xa5\x30\x1c\x9e\xb6\x0f\x4f\x58\xa0\x9d\xaf\x65\xcd\xd8\x9d\x43\x18\xbc\xda\xc5\xae\x66\xd0\x62\x8c\x45\x90\xba\x30\xb6\xe6\x5e\x1a\xdd\x8b\xef\xa5\x67\x64\x50\xf0\x6b\x4c\x09\xc6\x36\x3f\xec\x3c\xb1\x1b\xa4\x83\xc6\xa1\x20\xf1\x54\xd9\x68\x99\x73\x8f\x70\x90\xbe\x0a\x53\x4c\x5f\xac\xbf\x37\x0d\xe4\x5c\x13\x3c\xb8\xdb\x1b\xe3\x0d\x1c\x8c\xfd\xab\x2d\xe9\x2d\x79\x07\x1f\xb6\xff\x15\x98\x56\xde\x01\xb6\xa7\xc2\x1b\x0a\xde\x1e\x89\x0c\x20\x8c\x75\xc3\x75\x7e\x04\xe7\x9b\xa2\x68\x87\x2b\x8c\x52\xe6\x20\x75\x09\x15\x77\xb0\x43\xd4\xc0\x85\x68\x47\x73\x95\x39\x80\x29\x0a\xa0\x77\x11\x2a\x89\x32\xec\xb8\x3b\x3a\x8f\x35\x48\x77\x15\x0e\x75\x69\x58\xd1\xe8\x1c\xe2\x3d\x4c\xa6\x93\x3f\x1a\xb4\xc7\x04\xae\x1b\xa9\x44\x88\xe3\x04\x9c\xb7\xd4\xe5\x1f\x16\x09\xda\xaa\xab\x11\x0c\x3e\xcf\x36\xd3\xf1\x66\x16\x27\xc3\x8f\x83\xb0\xcc\x53\x40\x6b\x29\xb7\xe3\x0e\x7f\xf9\x39\x5b\x7b\x31\xd3\xb9\x11\x52\x97\xd9\x14\x73\x23\x70\x1d\x68\xe2\x7d\xb6\xc2\x7d\x83\xce\x67\x6b\xa9\x73\x4c\x58\x24\x8b\x50\x3b\x1a\x81\x96\x8a\xda\x44\xc2\xa7\xb0\x25\x32\x2f\x6b\xcc\xbe\x71\xeb\x30\x0e\xe1\xea\x66\x72\x79\x79\xf9\x6b\xda\x69\x8a\xa9\x73\x92\x50\x05\x29\x1b\x41\x51\xfb\x6c\xfd\x6c\xa5\xf6\x45\x3c\x20\x85\x9b\xf9\xed\xec\x66\xf5\xf5\xf6\xdb\x78\xb5\x59\xc7\x70\x2e\xd2\x77\x7f\x1f\x92\x41\xca\x22\x6a\x9c\xdd\x23\xb7\x71\x92\x82\xf0\xd9\xad\xd1\xbe\xea\xe2\x29\x3f\x76\xd1\x17\xd3\xbc\x00\xa4\x6e\x3c\x76\x1f\x6b\xcc\x8d\x16\x31\xc9\xf9\xce\xa2\x3d\x6d\x1e\x8d\x70\x2a\xe9\x89\x45\xd1\x74\x36\x59\x8c\x57\x33\xf8\xb4\xc3\x52\xea\x2d\x8d\x05\xbd\xd2\x14\x3e\xa1\x16\x6f\xd6\x5a\xa4\x72\x1a\xae\xe7\xcb\xf1\xea\x3e\xfe\xf8\x21\xe9\xa0\xaf\x17\x7f\x63\x51\xb4\x9e\x2d\x66\x93\xcd\x2b\xfa\x11\x9c\xbb\x53\xea\x11\xbc\xf8\xf7\xb6\x82\x18\x47\x74\x48\xb2\x42\x6f\x73\x91\x6f\x6b\xfe\x1c\xca\xb6\xde\x50\x32\xbe\x70\x35\x57\x0a\x9d\x87\xd2\x22\xf7\x48\x37\x27\xd7\x17\xe9\x69\xcb\x57\xbc\xbd\xce\xff\x67\x55\xdc\x96\x44\xaa\xd0\xb9\xc0\x08\xc6\x02\xee\x1b\xae\x2e\x4e\xb4\x07\xe2\xf9\xcd\xa9\xd8\xf9\x1a\x96\x5f\x37\xb0\xbc\x5b\x2c\xe0\x7a\xf6\x79\xbe\x24\x23\xbb\xde\x3f\x01\x99\x0f\x0f\xb9\xc8\x1f\xb3\x87\xae\x75\x89\x7e\xcb\x95\xda\xe6\x15\xd7\x25\xba\xad\xd8\x99\xed\xb9\x7b\x8c\x7f\x70\xa6\xbd\xe6\x74\x79\x31\x5e\x2c\x2e\x42\xd7\xd9\x72\xca\xa2\xa7\x94\xfe\x97\x98\xc2\x3e\xdb\xd0\xcd\x37\xc5\xa2\x0d\x96\xbc\xc6\x84\xb1\xc8\xa2\x6f\xac\x86\x60\x3f\xfb\xde\x5e\x4a\xff\x06\x00\x00\xff\xff\x85\xda\xdb\x8a\x78\x06\x00\x00")

func resourcesDocRootMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocRootMd,
		"resources/doc-root.md",
	)
}

func resourcesDocRootMd() (*asset, error) {
	bytes, err := resourcesDocRootMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-root.md", size: 1656, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesDocTransformMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x4d\x6f\xdb\x30\x0c\xbd\xeb\x57\x10\x29\x06\xb4\x69\xe2\x62\xc0\xb6\x43\xf7\x71\xe9\x7a\x48\xb1\x9e\x3a\x60\xe8\xa9\xa5\x6d\x3a\x66\x20\x51\x86\x3e\xd2\x04\xc5\xfe\xfb\x20\xc9\x4e\x13\xac\x39\xc4\x91\x45\xbe\xf7\xf8\xf8\x72\x06\xf7\x6c\xd8\x59\xf8\x89\x01\xfb\x58\xc3\xcd\xaf\x15\x2c\x21\x38\x14\xdf\x59\x67\x94\xba\x47\xc1\x35\xc1\xef\xe9\x0d\x06\xb6\xe2\xa1\x73\xd6\x40\xa3\x19\x7c\x6c\x7a\x40\x0f\x6c\x06\xeb\xc2\x02\x68\x57\x9e\x81\x7c\x00\x94\x16\xbc\x05\x2b\x15\x3c\x10\x01\x6e\x91\x35\xd6\x9a\xe0\xc6\x1a\x83\xd2\xfa\x4a\x3d\x3f\x3f\xab\x0f\x3e\x3f\xd4\xd9\x19\xac\x32\x0c\x34\xb6\x25\xa5\x1e\x6d\x84\xe8\x09\x42\x4f\x23\x3e\x34\xa5\x11\x82\x9d\xde\xec\x6d\x74\x70\x87\x5b\x7c\x68\x1c\x0f\xa5\x15\x58\x82\x05\x84\x3b\x5b\x83\x95\xdc\x3f\x0e\x58\xa9\x4c\x65\xd8\xbc\x0d\x39\x21\x7d\xdb\xd8\x7a\xc9\xed\x0f\x58\x2e\x3b\xd6\xf4\x9d\x65\x88\xa1\xda\x78\x2b\x45\xde\xaa\x4b\x64\x60\x0d\x87\x0c\x59\xca\x17\xef\xc9\x7b\x61\xad\x61\x13\x7d\x80\x1a\x3d\x7d\xf9\x04\x24\x59\x57\x16\xdb\x45\x69\x92\x8b\xd9\x9e\xc1\xb1\x24\x38\x0c\x69\xa6\x04\xd5\x58\xf1\x56\x53\xa5\xfe\xf4\x24\x99\xd1\x45\x79\x87\x64\x01\x1c\x0a\x11\x6a\x6f\x0f\x40\x54\x06\x1b\x58\x53\x5b\xcc\xb0\x72\x8a\xbc\x48\x3b\x49\xb8\x0d\x0a\xb0\xf8\x81\x9a\x00\x1c\x2a\xa5\x56\x01\x78\x5a\x25\x4a\x56\x24\x36\xd0\x28\xaf\xa7\x63\x9f\xb7\xe4\x7c\x1a\xe2\xd4\xdf\xd4\x5f\xa3\xe7\x06\xb5\xde\xc3\xed\xc3\xe7\xea\xe3\x22\x73\xf9\xde\x46\xdd\x82\x21\xc0\x17\x74\x04\xb6\xcb\x6d\x4a\xb3\xe1\x30\x86\x6a\xa4\x19\x25\x78\xf2\x95\x52\xf3\xf9\x6a\x92\x33\x9f\xc3\x61\x09\xc7\xcb\x3f\xf8\x19\x7a\x67\xe3\xba\xcf\xc0\x69\xc3\x63\xd1\x74\x5f\x84\x98\xb4\x95\x92\xd2\x34\x34\x9c\x02\x72\x00\x83\x12\xb3\xfa\x7a\x0f\x8a\xc5\x93\x0b\x2c\xeb\xd3\x45\x8e\xce\xb6\xec\xa8\x09\x7a\x5f\xf2\x36\x66\xa2\xd0\xcc\x13\xcf\x1c\x68\xd7\xe8\xd8\x96\x08\x17\xd2\x4a\xa9\xdb\x1d\x9a\x41\x67\x0f\xb6\xa8\xb9\x3d\xb2\xf5\x3a\xe7\x73\x83\x5b\xf4\xf9\xac\x46\xa5\x6f\x33\x4e\xa9\x7d\x22\x09\x1c\x98\xfc\xf9\xf4\xe3\x02\x5e\x21\x7d\x54\xfa\xba\xba\x82\x81\x5c\x8e\x77\xd3\xa3\xac\xc9\x27\xba\xc6\xd1\xe8\x75\xa9\x72\x14\xa2\x13\x98\x10\xbe\xaa\xbf\x4a\x1d\xa8\x06\x47\x1d\xef\x9e\x3a\x26\xdd\x9e\x97\xc3\x02\xf2\xe9\x02\x5e\x8f\xdb\xcb\x1d\x5c\xc2\xec\x7a\x06\x97\xa5\x24\x41\xe5\x7f\xcd\xe3\xc9\x8a\xb2\xfb\x39\xaf\x35\x81\xa0\xa1\x16\x66\xff\x8f\x34\x5b\x80\x75\x87\x78\x8b\x0d\xa9\xba\xb3\x51\xda\xb4\x94\xec\xa5\xac\x59\xa8\xfa\x17\x00\x00\xff\xff\x7a\x0a\x02\x28\xc0\x04\x00\x00")

func resourcesDocTransformMdBytes() ([]byte, error) {
	return bindataRead(
		_resourcesDocTransformMd,
		"resources/doc-transform.md",
	)
}

func resourcesDocTransformMd() (*asset, error) {
	bytes, err := resourcesDocTransformMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/doc-transform.md", size: 1216, mode: os.FileMode(420), modTime: time.Unix(1616584390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/addJobsConfig.json": resourcesAddjobsconfigJson,
	"resources/cow.txt":            resourcesCowTxt,
	"resources/doc-content.md":     resourcesDocContentMd,
	"resources/doc-dataset.md":     resourcesDocDatasetMd,
	"resources/doc-jobs.md":        resourcesDocJobsMd,
	"resources/doc-login.md":       resourcesDocLoginMd,
	"resources/doc-namespace.md":   resourcesDocNamespaceMd,
	"resources/doc-query.md":       resourcesDocQueryMd,
	"resources/doc-root.md":        resourcesDocRootMd,
	"resources/doc-transform.md":   resourcesDocTransformMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"addJobsConfig.json": &bintree{resourcesAddjobsconfigJson, map[string]*bintree{}},
		"cow.txt":            &bintree{resourcesCowTxt, map[string]*bintree{}},
		"doc-content.md":     &bintree{resourcesDocContentMd, map[string]*bintree{}},
		"doc-dataset.md":     &bintree{resourcesDocDatasetMd, map[string]*bintree{}},
		"doc-jobs.md":        &bintree{resourcesDocJobsMd, map[string]*bintree{}},
		"doc-login.md":       &bintree{resourcesDocLoginMd, map[string]*bintree{}},
		"doc-namespace.md":   &bintree{resourcesDocNamespaceMd, map[string]*bintree{}},
		"doc-query.md":       &bintree{resourcesDocQueryMd, map[string]*bintree{}},
		"doc-root.md":        &bintree{resourcesDocRootMd, map[string]*bintree{}},
		"doc-transform.md":   &bintree{resourcesDocTransformMd, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
